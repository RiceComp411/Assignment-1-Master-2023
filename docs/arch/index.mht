MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_01D9272D.D52FEE00"

This document is a Single File Web Page, also known as a Web Archive file.  If you are seeing this message, your browser or editor doesn't support Web Archive files.  Please download a browser that supports Web Archive, such as Windows® Internet Explorer®.

------=_NextPart_01D9272D.D52FEE00
Content-Location: file:///C:/20C89D18/new-index.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="windows-1252"

<html xmlns:v=3D"urn:schemas-microsoft-com:vml"
xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:w=3D"urn:schemas-microsoft-com:office:word"
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml"
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dwindows-125=
2">
<meta name=3DProgId content=3DWord.Document>
<meta name=3DGenerator content=3D"Microsoft Word 15">
<meta name=3DOriginator content=3D"Microsoft Word 15">
<link rel=3DFile-List href=3D"new-index_files/filelist.xml">
<link rel=3DEdit-Time-Data href=3D"new-index_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>COMP 411 Principles of Programming Languages</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Robert Cartwright</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Robert Cartwright</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>360</o:TotalTime>
  <o:LastPrinted>2022-01-22T22:13:00Z</o:LastPrinted>
  <o:Created>2023-01-13T15:02:00Z</o:Created>
  <o:LastSaved>2023-01-13T15:02:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>2968</o:Words>
  <o:Characters>16918</o:Characters>
  <o:Lines>140</o:Lines>
  <o:Paragraphs>39</o:Paragraphs>
  <o:CharactersWithSpaces>19847</o:CharactersWithSpaces>
  <o:Version>15.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=3DthemeData href=3D"new-index_files/themedata.thmx">
<link rel=3DcolorSchemeMapping href=3D"new-index_files/colorschememapping.x=
ml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SplitPgBreakAndParaMark/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val=3D"Cambria Math"/>
   <m:brkBin m:val=3D"before"/>
   <m:brkBinSub m:val=3D"&#45;-"/>
   <m:smallFrac m:val=3D"off"/>
   <m:dispDef/>
   <m:lMargin m:val=3D"0"/>
   <m:rMargin m:val=3D"0"/>
   <m:defJc m:val=3D"centerGroup"/>
   <m:wrapIndent m:val=3D"1440"/>
   <m:intLim m:val=3D"subSup"/>
   <m:naryLim m:val=3D"undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState=3D"false" DefUnhideWhenUsed=3D"false"
  DefSemiHidden=3D"false" DefQFormat=3D"false" DefPriority=3D"99"
  LatentStyleCount=3D"371">
  <w:LsdException Locked=3D"false" Priority=3D"0" QFormat=3D"true" Name=3D"=
Normal"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" QFormat=3D"true" Name=3D"=
heading 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"9" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"heading 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index 9"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 7"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 8"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"toc 9"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Normal Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"footnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"annotation text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"header"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"footer"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"index heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"35" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"caption"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"table of figures"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"envelope address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"envelope return"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"footnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"annotation reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"line number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"page number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"endnote reference"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"endnote text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"table of authorities"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"macro"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"toa heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Bullet"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Number"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Bullet 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Bullet 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Bullet 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Bullet 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Number 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Number 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Number 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Number 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"10" QFormat=3D"true" Name=3D=
"Title"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Closing"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Signature"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Default Paragraph Font"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Body Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Body Text Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Continue"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Continue 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Continue 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Continue 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"List Continue 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Message Header"/>
  <w:LsdException Locked=3D"false" Priority=3D"11" QFormat=3D"true" Name=3D=
"Subtitle"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Salutation"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Date"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Body Text First Indent"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Body Text First Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Note Heading"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Body Text 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Body Text 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Body Text Indent 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Body Text Indent 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Block Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Hyperlink"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"FollowedHyperlink"/>
  <w:LsdException Locked=3D"false" Priority=3D"22" QFormat=3D"true" Name=3D=
"Strong"/>
  <w:LsdException Locked=3D"false" Priority=3D"20" QFormat=3D"true" Name=3D=
"Emphasis"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Document Map"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Plain Text"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"E-mail Signature"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Top of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Bottom of Form"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Normal (Web)"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Acronym"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Address"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Cite"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Code"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Definition"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Keyboard"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Preformatted"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Sample"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Typewriter"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"HTML Variable"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Normal Table"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"annotation subject"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"No List"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Outline List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Outline List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Outline List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Simple 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Simple 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Simple 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Classic 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Classic 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Classic 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Classic 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Colorful 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Colorful 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Colorful 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Columns 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Columns 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Columns 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Columns 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Columns 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Grid 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Grid 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Grid 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Grid 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Grid 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Grid 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Grid 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Grid 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table List 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table List 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table List 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table List 4"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table List 5"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table List 6"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table List 7"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table List 8"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table 3D effects 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table 3D effects 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table 3D effects 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Contemporary"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Elegant"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Professional"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Subtle 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Subtle 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Web 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Web 2"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Web 3"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Balloon Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" Name=3D"Table Grid"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" UnhideWhenUsed=3D"tr=
ue"
   Name=3D"Table Theme"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Placeholder =
Text"/>
  <w:LsdException Locked=3D"false" Priority=3D"1" QFormat=3D"true" Name=3D"=
No Spacing"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1=
"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2=
"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading=
"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Ac=
cent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accen=
t 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accen=
t 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1=
 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2=
 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Ac=
cent 1"/>
  <w:LsdException Locked=3D"false" SemiHidden=3D"true" Name=3D"Revision"/>
  <w:LsdException Locked=3D"false" Priority=3D"34" QFormat=3D"true"
   Name=3D"List Paragraph"/>
  <w:LsdException Locked=3D"false" Priority=3D"29" QFormat=3D"true" Name=3D=
"Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"30" QFormat=3D"true"
   Name=3D"Intense Quote"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Ac=
cent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Ac=
cent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Ac=
cent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Ac=
cent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent=
 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading=
 Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Ac=
cent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Ac=
cent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Ac=
cent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accen=
t 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accen=
t 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1=
 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2=
 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Ac=
cent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Ac=
cent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Ac=
cent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Ac=
cent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Ac=
cent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent=
 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading=
 Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Ac=
cent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Ac=
cent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Ac=
cent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accen=
t 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accen=
t 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1=
 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2=
 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Ac=
cent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Ac=
cent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Ac=
cent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Ac=
cent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Ac=
cent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent=
 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading=
 Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Ac=
cent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Ac=
cent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Ac=
cent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accen=
t 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accen=
t 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1=
 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2=
 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Ac=
cent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Ac=
cent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Ac=
cent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Ac=
cent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Ac=
cent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent=
 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading=
 Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Ac=
cent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Ac=
cent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Ac=
cent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accen=
t 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accen=
t 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1=
 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2=
 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Ac=
cent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Ac=
cent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Ac=
cent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Ac=
cent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Ac=
cent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent=
 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading=
 Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Ac=
cent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Ac=
cent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"60" Name=3D"Light Shading Ac=
cent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"61" Name=3D"Light List Accen=
t 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"62" Name=3D"Light Grid Accen=
t 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"63" Name=3D"Medium Shading 1=
 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"64" Name=3D"Medium Shading 2=
 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"65" Name=3D"Medium List 1 Ac=
cent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"66" Name=3D"Medium List 2 Ac=
cent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"67" Name=3D"Medium Grid 1 Ac=
cent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"68" Name=3D"Medium Grid 2 Ac=
cent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"69" Name=3D"Medium Grid 3 Ac=
cent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"70" Name=3D"Dark List Accent=
 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"71" Name=3D"Colorful Shading=
 Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"72" Name=3D"Colorful List Ac=
cent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"73" Name=3D"Colorful Grid Ac=
cent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"19" QFormat=3D"true"
   Name=3D"Subtle Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"21" QFormat=3D"true"
   Name=3D"Intense Emphasis"/>
  <w:LsdException Locked=3D"false" Priority=3D"31" QFormat=3D"true"
   Name=3D"Subtle Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"32" QFormat=3D"true"
   Name=3D"Intense Reference"/>
  <w:LsdException Locked=3D"false" Priority=3D"33" QFormat=3D"true" Name=3D=
"Book Title"/>
  <w:LsdException Locked=3D"false" Priority=3D"37" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" Name=3D"Bibliography"/>
  <w:LsdException Locked=3D"false" Priority=3D"39" SemiHidden=3D"true"
   UnhideWhenUsed=3D"true" QFormat=3D"true" Name=3D"TOC Heading"/>
  <w:LsdException Locked=3D"false" Priority=3D"41" Name=3D"Plain Table 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"42" Name=3D"Plain Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"43" Name=3D"Plain Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"44" Name=3D"Plain Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"45" Name=3D"Plain Table 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"40" Name=3D"Grid Table Light=
"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"Grid Table 1 Lig=
ht"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dar=
k"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"Grid Table 6 Col=
orful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"Grid Table 7 Col=
orful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Acc=
ent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Acc=
ent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Acc=
ent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dar=
k Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Acc=
ent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Acc=
ent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Acc=
ent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dar=
k Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Acc=
ent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Acc=
ent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Acc=
ent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dar=
k Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Acc=
ent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Acc=
ent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Acc=
ent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dar=
k Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Acc=
ent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Acc=
ent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Acc=
ent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dar=
k Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"Grid Table 2 Acc=
ent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"Grid Table 3 Acc=
ent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"Grid Table 4 Acc=
ent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"Grid Table 5 Dar=
k Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"46" Name=3D"List Table 1 Lig=
ht"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dar=
k"/>
  <w:LsdException Locked=3D"false" Priority=3D"51" Name=3D"List Table 6 Col=
orful"/>
  <w:LsdException Locked=3D"false" Priority=3D"52" Name=3D"List Table 7 Col=
orful"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Acc=
ent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Acc=
ent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Acc=
ent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dar=
k Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Acc=
ent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Acc=
ent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Acc=
ent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dar=
k Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Acc=
ent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Acc=
ent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Acc=
ent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dar=
k Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Acc=
ent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Acc=
ent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Acc=
ent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dar=
k Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Acc=
ent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Acc=
ent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Acc=
ent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dar=
k Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked=3D"false" Priority=3D"46"
   Name=3D"List Table 1 Light Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"47" Name=3D"List Table 2 Acc=
ent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"48" Name=3D"List Table 3 Acc=
ent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"49" Name=3D"List Table 4 Acc=
ent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"50" Name=3D"List Table 5 Dar=
k Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"51"
   Name=3D"List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked=3D"false" Priority=3D"52"
   Name=3D"List Table 7 Colorful Accent 6"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536869121 1107305727 33554432 0 415 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-536869121 64767 1 0 415 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
h2
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 2 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h3
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 3 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{mso-style-noshow:yes;
	mso-style-priority:99;
	font-family:"Arial",sans-serif;
	mso-ascii-font-family:Arial;
	mso-hansi-font-family:Arial;
	mso-bidi-font-family:Arial;
	color:#0000EE;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	font-family:"Arial",sans-serif;
	mso-ascii-font-family:Arial;
	mso-hansi-font-family:Arial;
	mso-bidi-font-family:Arial;
	color:#551A8B;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
code
	{mso-style-noshow:yes;
	mso-style-priority:99;
	font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"HTML Preformatted Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 41=
2.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
tt
	{mso-style-noshow:yes;
	mso-style-priority:99;
	font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 2";
	mso-ansi-font-size:13.0pt;
	mso-bidi-font-size:13.0pt;
	font-family:"Calibri Light",sans-serif;
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#2E74B5;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 3";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Calibri Light",sans-serif;
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#1F4D78;
	mso-themecolor:accent1;
	mso-themeshade:127;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"HTML Preformatted";
	font-family:Consolas;
	mso-ascii-font-family:Consolas;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Consolas;}
p.class1, li.class1, div.class1
	{mso-style-name:class1;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Arial",sans-serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 @list l0
	{mso-list-id:970205115;
	mso-list-template-ids:-1300824304;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l0:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l0:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1
	{mso-list-id:1006057838;
	mso-list-template-ids:-1101632904;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level2
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2
	{mso-list-id:1345550311;
	mso-list-template-ids:1240916470;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level2
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l3
	{mso-list-id:1736465113;
	mso-list-template-ids:90608620;}
@list l3:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l3:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l3:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext=3D"edit">
  <o:idmap v:ext=3D"edit" data=3D"1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=3Dwhite lang=3DEN-US link=3D"#0000EE" vlink=3D"#551A8B" style=
=3D'tab-interval:
5.0in' alink=3D"#ff0000">

<div class=3DWordSection1>

<table class=3DMsoNormalTable border=3D0 cellspacing=3D3 cellpadding=3D0 wi=
dth=3D"100%"
 style=3D'width:100.0%;mso-cellspacing:1.5pt;mso-yfti-tbllook:1184;mso-padd=
ing-alt:
 0in 0in 0in 0in'>
 <tr style=3D'mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td style=3D'padding:.75pt .75pt .75pt .75pt'>
  <p class=3DMsoNormal style=3D'margin-right:7.5pt'><span style=3D'font-siz=
e:14.0pt;
  mso-bidi-font-size:12.0pt;mso-no-proof:yes'><img width=3D122 height=3D123
  id=3D"_x0000_i1025"
  src=3D"https://www.cs.rice.edu/~javaplt/411/22-spring/logo.gif"
  alt=3D"Rice University"></span><sup><span style=3D'font-size:72.0pt'>&nbs=
p;COMP
  411/511</span></sup><span style=3D'font-size:14.0pt;mso-bidi-font-size:12=
.0pt'>
  <o:p></o:p></span></p>
  <p class=3Dclass1><b><span style=3D'font-size:36.0pt;font-family:"Times N=
ew Roman",serif;
  color:#3366FF'>Programming Assignment 1: Parsing and Abstract Syntax</spa=
n></b><span
  style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times Ne=
w Roman",serif'>
  </span><span style=3D'font-family:"Times New Roman",serif'><o:p></o:p></s=
pan></p>
  </td>
  <td style=3D'padding:.75pt .75pt .75pt .75pt'>
  <p class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto'><span
  style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt'>&nbsp;<o:p></o:p></s=
pan></p>
  </td>
 </tr>
 <tr style=3D'mso-yfti-irow:1;mso-yfti-lastrow:yes'>
  <td style=3D'padding:.75pt .75pt .75pt .75pt'>
  <p class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto'><span
  style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt'>&nbsp;</span></p>
  </td>
  <td style=3D'padding:.75pt .75pt .75pt .75pt'>
  <p class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto'><span
  style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt'>&nbsp;<o:p></o:p></s=
pan></p>
  </td>
 </tr>
</table>

<h2><span style=3D'mso-fareast-font-family:"Times New Roman";mso-bidi-font-=
family:
Arial'>Points: 100<o:p></o:p></span></h2>

<h2><span style=3D'mso-fareast-font-family:"Times New Roman";mso-bidi-font-=
family:
Arial'>Overview<o:p></o:p></span></h2>

<p><b><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family=
:"Times New Roman",serif;
mso-bidi-font-family:Arial'>Preparation</span></b><span style=3D'font-size:=
14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> &nbsp; <o:p></o:p></span></p>

<p><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"T=
imes New Roman",serif;
mso-bidi-font-family:Arial'>We recommend using either IntelliJ or <span
class=3DSpellE>DrJava</span> as your Java IDE for all programming
assignments.<span style=3D'mso-spacerun:yes'>  </span>You can download DrJa=
va in
the form of the executable jar file </span><span style=3D'font-family:Conso=
las'>drjava.jar</span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> from <a
href=3D"http://www.cs.rice.edu/~javaplt/drjavarice"><span style=3D'mso-asci=
i-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>http://www.cs.ri=
ce.edu/~javaplt/drjavarice</span></a>.<span
style=3D'mso-spacerun:yes'>  </span>When you accept the assignment, GitHub =
Classroom
creates a repository for you that in initialized to contain all of the supp=
ort
files for the project including this project description.<span
style=3D'mso-spacerun:yes'>  </span><span class=3DSpellE>DrJava</span> only=
 runs
using Java 8.<span style=3D'mso-spacerun:yes'>  </span>We recommend using t=
he
Oracle Java 8 SE (build 8u331 or later) with <span class=3DSpellE>DrJava</s=
pan>; on
<span class=3DSpellE>Winddows</span> 10/12, <span class=3DSpellE>DrJava</sp=
an>
appears to be slightly more reliable than other distributions of the Java 8=
 JDK
such as <span class=3DSpellE>OpenJDK</span> 8.<span style=3D'mso-spacerun:y=
es'> 
</span><span class=3DSpellE>DrJava</span> has been developed using builds t=
he
Oracle Java 8 SE, most recently build 8u331 and the various versions of the
Java 8 JDK differ in minor respects.<span style=3D'mso-spacerun:yes'>  </sp=
an>If
you use IntelliJ as your IDE, you can choose any compatible JDK.<span
style=3D'mso-spacerun:yes'>  </span>Beware of the fact that the assignments=
 you
submit must run from the command line and <i>cannot</i> place of the method=
s in
the specified API in named packages.<span style=3D'mso-spacerun:yes'>  </sp=
an>If
your program modifies the specified API (as stipulated in the assignment
description below and codified in the sample test suite Assign1Test.java) by
placing the API methods in named packages, your program does not implement =
the
specified API and all grading tests will fail.<span style=3D'mso-spacerun:y=
es'> 
</span>You can confirm that your program supports the specified API by runn=
ing
the sample test suite in Assign1Test.java.<o:p></o:p></span></p>

<p><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"T=
imes New Roman",serif;
mso-bidi-font-family:Arial'>Edit the </span><span style=3D'font-family:Cons=
olas'>README</span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> file for your repository to give an overview of
your solution, most notably the API that it supports.<span
style=3D'mso-spacerun:yes'>  </span>We recommend that you place your Java s=
ource
files in the folder named </span><span class=3DSpellE><span style=3D'font-f=
amily:
Consolas'>src</span></span><span style=3D'font-size:14.0pt;mso-bidi-font-si=
ze:
12.0pt;font-family:"Times New Roman",serif;mso-bidi-font-family:Arial'> tha=
t is
already present in your repository.<span style=3D'mso-spacerun:yes'>  </spa=
n>We
also recommend placing your compiled class files in a separate folder named=
 </span><span
style=3D'font-family:Consolas'>classes</span><span style=3D'font-size:14.0p=
t;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> that is already present in your repository.<span
style=3D'mso-spacerun:yes'>  </span>In <span class=3DSpellE>DrJava</span>, =
you can
define a project with </span><span class=3DSpellE><span style=3D'font-famil=
y:Consolas'>src</span></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> as the source directory and </span><span
style=3D'font-family:Consolas'>classes</span><span style=3D'font-size:14.0p=
t;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> as the folder where the compiler places the </span><span
style=3D'font-family:Consolas'>.class</span><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> files corresponding to the source program.<span
style=3D'mso-spacerun:yes'>  </span>Like more elaborate professional IDEs, =
<span
class=3DSpellE>DrJava</span> supports compiling and testing projects.<o:p><=
/o:p></span></p>

<p><span class=3DSpellE><span style=3D'font-size:14.0pt;mso-bidi-font-size:=
12.0pt;
font-family:"Times New Roman",serif;mso-bidi-font-family:Arial'>DrJava</spa=
n></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> is distributed as a Java </span><code><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>jar</span></code><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> file at the web site <a href=3D"http://drjava.=
org/"><span
style=3D'mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Tim=
es New Roman"'>http://drjava.org</span></a>
as well our local site (<a href=3D"http://www.cs.rice.edu/~javaplt/drjavari=
ce"><span
style=3D'mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Tim=
es New Roman"'>http://www.cs.rice.edu/~javaplt/drjavarice</span></a>)
but the local site typically has more recent builds. You can run <span
class=3DSpellE>DrJava</span> on a Linux or Mac system (with Java JDK 8 inst=
alled)
by typing <o:p></o:p></span></p>

<p><span class=3DGramE><code><span style=3D'mso-ansi-font-size:12.0pt;mso-b=
idi-font-size:
12.0pt;font-family:Consolas'>java</span></code></span><code><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>
-jar drjava.jar </span></code><span style=3D'font-family:Consolas'><o:p></o=
:p></span></p>

<p><span class=3DGramE><span style=3D'font-size:14.0pt;mso-bidi-font-size:1=
2.0pt;
font-family:"Times New Roman",serif;mso-bidi-font-family:Arial'>assuming</s=
pan></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> that </span><tt><span style=3D'mso-ansi-font-s=
ize:
12.0pt;mso-bidi-font-size:12.0pt;font-family:Consolas'>drjava.jar</span></t=
t><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> is located in the current directory.<span
style=3D'mso-spacerun:yes'>  </span><span class=3DSpellE>DrJava</span> is n=
ot a
registered Mac application, so <span class=3DSpellE>DrJava</span> can only =
be run
from the command line on Macs. On Windows machines (with a properly install=
ed
Java JDK 8), you can run the </span><tt><span style=3D'mso-ansi-font-size:1=
2.0pt;
mso-bidi-font-size:12.0pt;font-family:Consolas'>drjava.jar</span></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> file simply by double-clicking on the icon. If=
 the
Registry has the wrong file type associated the </span><tt><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>.jar</span></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> files, then double-clicking </span><tt><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>.jar</span></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> icons will not work. In this case, we recommend
running <span class=3DSpellE>DrJava</span> inside the Windows Command Prom=
pt or
<span class=3DSpellE>Powershell</span> using the same command as shown abov=
e for
Linux. <o:p></o:p></span></p>

<p><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"T=
imes New Roman",serif;
mso-bidi-font-family:Arial'>Documentation for <span class=3DSpellE>DrJava</=
span>
is available at <a href=3D"http://drjava.org/"><span style=3D'mso-ascii-fon=
t-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman"'>drjava.org</span=
></a>.
If you have further questions about <span class=3DSpellE>DrJava</span>, ask=
 them
on Piazza. <o:p></o:p></span></p>

<p><b><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family=
:"Times New Roman",serif;
mso-bidi-font-family:Arial'>Testing</span></b><span style=3D'font-size:14.0=
pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> &nbsp; You are expected to write unit tests for all of your non-tri=
vial
methods or functions <em><span style=3D'mso-bidi-font-family:Arial'>and sub=
mit
your test code as part of your program</span></em>. <span class=3DSpellE>Dr=
Java</span>
provides integrated support for JUnit which makes this task easy.<span
style=3D'mso-spacerun:yes'>  </span>IntelliJ supports integrated testing us=
ing
Junit as well.<o:p></o:p></span></p>

<p><b><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family=
:"Times New Roman",serif;
mso-bidi-font-family:Arial'>Task</span></b><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> &nbsp; Your task is to write a parser in Generic Java (Java 8+) that
recognizes expressions in the pedagogic functional language Jam, which will=
 be
defined subsequently. The course staff has provided a <span class=3DSpellE>=
lexer</span>
in Java for this assignment. This <span class=3DSpellE>lexer</span> returns=
 a
larger set of symbols (tokens) than what appears in the <a
href=3D"file:///D:\cork\Documents\Comp%20411\2023\GitHub\Assignment-1-Maste=
r-2023\docs\Assignments\1\GitHub\Assignment-1.html#jam"><span
style=3D'mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Tim=
es New Roman"'>Jam
definition</span></a>. These extra symbols anticipate future extensions to =
Jam
in later projects. At this point, your parser should simply reject any prog=
ram
containing one of these extra symbols as ill-formed, just like it would for=
 any
other syntax error.<o:p></o:p></span></p>

<p><b><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family=
:"Times New Roman",serif;
mso-bidi-font-family:Arial'>Java Support Library</span></b><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> &nbsp; In the provided support files, the pars=
er's
input token stream is generated by a </span><span class=3DSpellE><tt><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>Lexer</span></tt></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> object supporting the 0-ary method </span><span
class=3DSpellE><tt><span style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-s=
ize:
12.0pt;font-family:Consolas'>readToken</span></tt></span><tt><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>()</span></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>. The </span><span class=3DSpellE><span class=
=3DGramE><tt><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>readToken</span></tt></span></span><span
class=3DGramE><tt><span style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-si=
ze:12.0pt;
font-family:Consolas'>(</span></tt></span><tt><span style=3D'mso-ansi-font-=
size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:Consolas'>)</span></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> method produces a stream of </span><span
style=3D'font-family:Consolas'>Token</span><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> objects belonging to various subclasses of the </span><tt><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>Token</span></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> interface. The </span><span class=3DSpellE><tt=
><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>Lexer</span></tt></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> class supports two constructors: (<span
class=3DSpellE>i</span>) a zero-<span class=3DSpellE>ary</span> constructor=
 that
converts standard input to a </span><span class=3DSpellE><tt><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>Lexer</span></tt></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> and (ii) a unary constructor </span><span
class=3DSpellE><span class=3DGramE><tt><span style=3D'mso-ansi-font-size:12=
.0pt;
mso-bidi-font-size:12.0pt;font-family:Consolas'>Lexer</span></tt></span></s=
pan><span
class=3DGramE><tt><span style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-si=
ze:12.0pt;
font-family:Consolas'>(</span></tt></span><tt><span style=3D'mso-ansi-font-=
size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:Consolas'>String <span
class=3DSpellE>fileName</span>)</span></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> that converts the specified file to a </span><span class=3DSpellE><=
tt><span
style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:Co=
nsolas'>Lexer</span></tt></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>. The file </span><tt><span style=3D'mso-ansi-f=
ont-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:Consolas'>lexer.java</span></t=
t><span
style=3D'font-family:Consolas'> </span><span style=3D'font-size:14.0pt;mso-=
bidi-font-size:
12.0pt;font-family:"Times New Roman",serif;mso-bidi-font-family:Arial'>cont=
ains
the definition of the </span><span class=3DSpellE><tt><span style=3D'mso-an=
si-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:Consolas'>Lexer</span></tt></s=
pan><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> class and the collection of classes representi=
ng
tokens (the Java interface type </span><tt><span style=3D'mso-ansi-font-siz=
e:
12.0pt;mso-bidi-font-size:12.0pt;font-family:Consolas'>Token</span></tt><sp=
an
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>) and abstract syntax trees (the java interface
type </span><tt><span style=3D'mso-ansi-font-size:12.0pt;mso-bidi-font-size=
:12.0pt;
font-family:Consolas'>AST</span></tt><span style=3D'font-size:14.0pt;mso-bi=
di-font-size:
12.0pt;font-family:"Times New Roman",serif;mso-bidi-font-family:Arial'>).<o=
:p></o:p></span></p>

<h2><span style=3D'mso-fareast-font-family:"Times New Roman";mso-bidi-font-=
family:
Arial'>The API That Your Program Must Support<o:p></o:p></span></h2>

<p><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"T=
imes New Roman",serif;
mso-bidi-font-family:Arial'>All classes visible in the API must be in the
default (top-level) package. Using named packages will break our grading
scripts, causing a catastrophic loss of points on the assignment.<span
style=3D'mso-spacerun:yes'>  </span>If your program passes the tests in the=
 file
Assign1Test.java in the empty package, it conforms to this standard.<o:p></=
o:p></span></p>

<p><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"T=
imes New Roman",serif;
mso-bidi-font-family:Arial'>Your parser should be expressed as a class </sp=
an><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>Parser</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> with constructors </span><span class=3DGramE><tt><b style=3D'mso-bi=
di-font-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Pars=
er(</span></b></tt></span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>Reader stream)</span></b></tt><span style=3D'font-siz=
e:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;
mso-bidi-font-family:Arial'> and </span><tt><b style=3D'mso-bidi-font-weigh=
t:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Pars=
er(String
filename)</span></b></tt><span style=3D'font-size:14.0pt;mso-bidi-font-size=
:12.0pt;
font-family:"Times New Roman",serif;mso-bidi-font-family:Arial'> which crea=
te
parsers reading the specified stream or file. The </span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>Reader</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> version of these constructors is very convenient when you are testi=
ng
your parser from the <span class=3DSpellE>DrJava</span> read-<span class=3D=
SpellE>eval</span>-print
loop or from unit test methods.<span style=3D'mso-spacerun:yes'>  </span>Th=
e </span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-family:Consolas'>=
String</span></b><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> version supports parsing Jam programs that res=
ide
in files.<o:p></o:p></span></p>

<p><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"T=
imes New Roman",serif;
mso-bidi-font-family:Arial'>The </span><tt><b style=3D'mso-bidi-font-weight=
:normal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Parser</span></b><=
/tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> class should contain a public method </span><t=
t><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>AST <span class=3DGramE>parse(</span>)</span></b></tt=
><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> that returns the abstract syntax tree for the =
Jam
expression in the input stream. Our grading program will print the output u=
sing
the method </span><span class=3DSpellE><tt><b style=3D'mso-bidi-font-weight=
:normal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>System.out.println=
</span></b></tt></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, which invokes the </span><span class=3DSpellE=
><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>toString</span></b></tt></span><span style=3D'font-si=
ze:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;
mso-bidi-font-family:Arial'> method on its argument. All of the requisite
abstract syntax classes including </span><span class=3DSpellE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>toString</span></b></tt></span><span style=3D'font-si=
ze:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;
mso-bidi-font-family:Arial'> methods are defined in the file </span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-family:Consolas'>=
AST.java</span></b><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> in the empty package.<span
style=3D'mso-spacerun:yes'>  </span>All of these support files are located =
in the
folder </span><span class=3DSpellE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-family:Consolas'>src</span></b></span><span style=3D'font-siz=
e:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> in your Assignment 1 repository.<o:p></o:p></span></p>

<p><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"T=
imes New Roman",serif;
mso-bidi-font-family:Arial'>If your parser encounters an erroneous input
(including illegal tokens), simply throw a </span><span class=3DSpellE><tt>=
<b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>ParseException</span></b></tt></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> containing a message explanation explaining the
error.<span style=3D'mso-spacerun:yes'>  </span>This operation will abort p=
arsing
the program.<span style=3D'mso-spacerun:yes'>  </span>The parser in this
assignment does not attempt to recover from syntax errors to continue parsi=
ng.
This behavior requires a complex specification including<a name=3Djam> many
special cases, which is beyond the scope of this assignment.<o:p></o:p></a>=
</span></p>

<h2><span style=3D'mso-bookmark:jam'><span style=3D'mso-fareast-font-family=
:"Times New Roman";
mso-bidi-font-family:Arial'>Input Language Specification<o:p></o:p></span><=
/span></h2>

<span style=3D'mso-bookmark:jam'></span>

<p><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"T=
imes New Roman",serif;
mso-bidi-font-family:Arial'>The following paragraphs define the parser's in=
put
language and the subset that your parser should recognize as legal Jam
programs.<o:p></o:p></span></p>

<p><strong><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-f=
amily:
"Arial",sans-serif'>The Meta-Language</span></strong><span style=3D'font-si=
ze:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;
mso-bidi-font-family:Arial'> The parser's input language is described using
Extended Backus-Naur Form (EBNF). When reading the notation, keep the follo=
wing
in mind:<o:p></o:p></span></p>

<ul type=3Ddisc>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l3 level1 lfo3;tab-stops:list .5in'><span style=3D'font-size:=
14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'>A symbol in the meta-language always starts
     with a capital letter. Therefore, </span><tt><b style=3D'mso-bidi-font=
-weight:
     normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'=
>Symbol</span></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> is a symbol in the-meta
     language, whereas </span><tt><b style=3D'mso-bidi-font-weight:normal'>=
<span
     style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>literal</span=
></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> is the actual text
     &quot;literal&quot;. Note that this convention depends on the fact tha=
t no
     literals in Jam begin with a capital letter.<o:p></o:p></span></li>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l3 level1 lfo3;tab-stops:list .5in'><span style=3D'font-size:=
14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'>A phrase </span><tt><b style=3D'mso-bidi-f=
ont-weight:
     normal'><i><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consol=
as'>P</span></i></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> enclosed in braces </sp=
an><span
     class=3DGramE><tt><b style=3D'mso-bidi-font-weight:normal'><span
     style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>{ <i>P</i></s=
pan></b></tt></span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'> }</span></b></tt><span style=3D'font-size:14.0p=
t;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> is optional, <i>i.e.</i> both </span><tt>=
<b
     style=3D'mso-bidi-font-weight:normal'><i><span style=3D'mso-ansi-font-=
size:
     12.0pt;font-family:Consolas'>P</span></i></b></tt><span style=3D'font-=
size:
     14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Ro=
man";
     mso-bidi-font-family:Arial'> and the empty string match </span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>{ <i>P</i> }</span></b></tt><span style=3D'font-=
size:
     14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Ro=
man";
     mso-bidi-font-family:Arial'>.<o:p></o:p></span></li>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l3 level1 lfo3;tab-stops:list .5in'><span style=3D'font-size:=
14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'>A phrase </span><tt><b style=3D'mso-bidi-f=
ont-weight:
     normal'><i><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consol=
as'>P</span></i></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> followed by </span><tt>=
<b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>*</span></b></tt><span style=3D'font-size:14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> is iterated zero or more times, <i>e.g.</=
i> </span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>Def*</span></b></tt><span style=3D'font-size:14.=
0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> means the concatenation of zero or more <=
/span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>Def</span></b></tt><span style=3D'font-size:14.0=
pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> phrases<span class=3DGramE>:</span><br>
     <br>
     </span><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'mso=
-ansi-font-size:
     12.0pt;font-family:Consolas'>Def</span></b></tt><span style=3D'font-si=
ze:
     14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Ro=
man";
     mso-bidi-font-family:Arial'><br>
     </span><span class=3DSpellE><tt><b style=3D'mso-bidi-font-weight:norma=
l'><span
     style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Def</span></b=
></tt></span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'> <span class=3DSpellE>Def</span></span></b></tt>=
<span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'><br>
     </span><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'mso=
-ansi-font-size:
     12.0pt;font-family:Consolas'>... </span></b></tt><span style=3D'font-s=
ize:
     14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Ro=
man";
     mso-bidi-font-family:Arial'><br>
     and so on, including the empty string. <o:p></o:p></span></li>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l3 level1 lfo3;tab-stops:list .5in'><span style=3D'font-size:=
14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'>A phrase </span><tt><b style=3D'mso-bidi-f=
ont-weight:
     normal'><i><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consol=
as'>P</span></i></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> followed by </span><tt>=
<b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>+</span></b></tt><span style=3D'font-size:14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> is iterated one or more times, <i>e.g.</i=
> </span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>Def+</span></b></tt><span style=3D'font-size:14.=
0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> means the concatenation of one or more </=
span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>Def</span></b></tt><span style=3D'font-size:14.0=
pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> phrases<span class=3DGramE>:</span><br>
     </span><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'mso=
-ansi-font-size:
     12.0pt;font-family:Consolas'>Def</span></b></tt><span style=3D'font-si=
ze:
     14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Ro=
man";
     mso-bidi-font-family:Arial'><br>
     </span><span class=3DSpellE><tt><b style=3D'mso-bidi-font-weight:norma=
l'><span
     style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Def</span></b=
></tt></span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'> <span class=3DSpellE>Def</span></span></b></tt>=
<span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'><br>
     </span><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'mso=
-ansi-font-size:
     12.0pt;font-family:Consolas'>... </span></b></tt><span style=3D'font-s=
ize:
     14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Ro=
man";
     mso-bidi-font-family:Arial'><br>
     and so on, but <strong><span style=3D'mso-bidi-font-family:Arial'>not<=
/span></strong>
     the empty string.<o:p></o:p></span></li>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l3 level1 lfo3;tab-stops:list .5in'><span style=3D'font-size:=
14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'>If a phrase </span><tt><b style=3D'mso-bid=
i-font-weight:
     normal'><i><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consol=
as'>P</span></i></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> enclosed in brackets </=
span><span
     class=3DGramE><tt><b style=3D'mso-bidi-font-weight:normal'><span
     style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>{ <i>P</i></s=
pan></b></tt></span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'> }</span></b></tt><span style=3D'font-size:14.0p=
t;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> is followed by a </span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>*</span></b></tt><span style=3D'font-size:14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> or </span><tt><b style=3D'mso-bidi-font-w=
eight:
     normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'=
>+</span></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'>, the braces are simply
     denote grouping: the enclosed phrase is iterated as specified by the *=
 or
     + symbol. For example, </span><span class=3DGramE><tt><b style=3D'mso-=
bidi-font-weight:
     normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'=
>{ A</span></b></tt></span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'> B }*</span></b></tt><span style=3D'font-size:14=
.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> is matched by zero or more concatenations=
 of
     A B: </span><tt><b style=3D'mso-bidi-font-weight:normal'><span
     style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>A B</span></b=
></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'><br>
     </span><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'mso=
-ansi-font-size:
     12.0pt;font-family:Consolas'>A B A B</span></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'><br>
     and so on, as well as the empty string, but <strong><span
     style=3D'mso-bidi-font-family:Arial'>not</span></strong> </span><tt><b
     style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-siz=
e:12.0pt;
     font-family:Consolas'>A</span></b></tt><span style=3D'font-size:14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'> or </span><tt><b style=3D'mso-bidi-font-w=
eight:
     normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'=
>A B A</span></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'>.<o:p></o:p></span></li>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l3 level1 lfo3;tab-stops:list .5in'><span style=3D'font-size:=
14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'>If something that is interpreted as part of
     the <span class=3DGramE>meta</span> language should be interpreted lit=
erally
     as part of the language we are describing, it will be enclosed in <i>s=
ingle</i>
     quotes. Therefore, </span><tt><b style=3D'mso-bidi-font-weight:normal'=
><span
     style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>'A'</span></b=
></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> is the actual letter
     &quot;A&quot;, not the symbol </span><tt><b style=3D'mso-bidi-font-wei=
ght:
     normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'=
>A</span></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> in the meta language, a=
nd </span><tt><b
     style=3D'mso-bidi-font-weight:normal'><i><span style=3D'mso-ansi-font-=
size:
     12.0pt;font-family:Consolas'>P</span></i></b></tt><tt><b style=3D'mso-=
bidi-font-weight:
     normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'=
> '*'</span></b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> is the phrase </span><t=
t><b
     style=3D'mso-bidi-font-weight:normal'><i><span style=3D'mso-ansi-font-=
size:
     12.0pt;font-family:Consolas'>P</span></i></b></tt><span style=3D'font-=
size:
     14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Ro=
man";
     mso-bidi-font-family:Arial'> followed by an actual asterisk, and does =
not
     mean that the phase </span><tt><b style=3D'mso-bidi-font-weight:normal=
'><i><span
     style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>P</span></i><=
/b></tt><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> should be repeated zero=
 or
     more times, as described above.<o:p></o:p></span></li>
</ul>

<p><b><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family=
:"Times New Roman",serif;
mso-bidi-font-family:Arial'>The Input Language</span></b><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> &nbsp; The parser's input language (modulo a f=
ew
changes described in the section (</span><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Arial'>Left-=
associative
Binary Operators</span></b><span style=3D'font-size:14.0pt;mso-bidi-font-si=
ze:
12.0pt;font-family:"Times New Roman",serif;mso-bidi-font-family:Arial'>) is=
 </span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>Input</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> where: <o:p></o:p></span></p>

<pre><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>I=
nput :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D Token*<o:p></o:p></span></b></pre><pre><s=
pan
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Token :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D <span class=3DSpellE>AlphaOther</span> <s=
pan
class=3DSpellE>AlphaOtherNumeric</span>* | Delimiter | Operator | <span
class=3DSpellE>Int</span><o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The <span class=3DSpellE>lexer</span> recognizes
keywords, delimiters (parentheses, commas, <span class=3DGramE>semicolons</=
span>),
primitive operations, identifiers, and numbers.<o:p></o:p></span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>Adjacent tokens must be separated by whitespace=
 (a
non-empty sequence of spaces, tabs, and newlines) unless one of the tokens =
is a
delimiter or operator. In identifying operators, the <span class=3DSpellE>l=
exer</span>
chooses the longest possible match. Hence, </span><tt><b style=3D'mso-bidi-=
font-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>&lt;=
=3D</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> is interpreted as a single token rather than <=
/span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>&lt;</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> followed by </span><tt><b style=3D'mso-bidi-font-weight:normal'><sp=
an
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>=3D</span></b></tt=
><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>.<o:p></o:p></span></p>

<pre><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>L=
ower<span style=3D'mso-spacerun:yes'>             </span>::</span></b></spa=
n><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D a | b | c | d | ... | z<o:p></o:p></span><=
/b></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Upper<span style=3D'mso-spa=
cerun:yes'>             </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D 'A' | 'B' | 'C' | 'D' | ... | 'Z'<span sty=
le=3D'mso-spacerun:yes'>      </span><o:p></o:p></span></b></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Other<span style=3D'mso-spa=
cerun:yes'>             </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D ? | _<o:p></o:p></span></b></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Digit<span style=3D'mso-spa=
cerun:yes'>             </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9<o:p>=
</o:p></span></b></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Alpha<span style=3D'mso-spa=
cerun:yes'>             </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D Upper | Lower<o:p></o:p></span></b></pre><=
pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>A=
lphaOther</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>        </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D Alpha | Other<o:p></o:p></span></b></pre><=
pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>A=
lphaOtherNumeric</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'> :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D <span class=3DSpellE>AlphaOther</span> | =
Digit<o:p></o:p></span></b></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Delimiter<span style=3D'mso=
-spacerun:yes'>         </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D ( | ) | [ | ] | , | ;<o:p></o:p></span></b=
></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Operator<span style=3D'mso-=
spacerun:yes'>          </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D '+' | - | ~ | '*' | / | =3D | !=3D | &lt; =
| &gt; | &lt;=3D | &gt;=3D | &amp; | '|' | :=3D<o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
b><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>Note</span></b><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'>: The terminal symbols 'A', </span><span class=3DGramE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>'B'</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'>, ...</span></span><span style=3D'font-size:14.0pt;mso-bidi-font-siz=
e:
12.0pt;font-family:"Times New Roman",serif;mso-bidi-font-family:Arial'> are
enclosed in single quotation marks because </span><tt><b style=3D'mso-bidi-=
font-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>A</s=
pan></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>B</span></b></tt><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, ..., would automatically be the names of
non-terminal symbols in our notation system. For essentially the same reaso=
n,
we enclose the symbols </span><tt><b style=3D'mso-bidi-font-weight:normal'>=
<span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>'+'</span></b></tt=
><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>'*'</span></b></tt=
><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, and </span><tt><b style=3D'mso-bidi-font-weig=
ht:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>'|'<=
/span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> in single quotation marks; these symbols witho=
ut
quotation marks are <span class=3DSpellE>metasymbols</span> in the notation
scheme described above. <o:p></o:p></span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
b><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>Jam</span></b><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> &nbsp; The set of legitimate Jam phrases is the subset of the poten=
tial
inputs consisting the expressions </span><span class=3DSpellE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>Exp</span></b></tt></span><tt><b style=3D'mso-bidi-fo=
nt-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'> </s=
pan></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>defined by the following grammar: <o:p></o:p></=
span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial",san=
s-serif'>Expressions</span></em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'><o:p></o:p></span></p>

<pre><span class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-wei=
ght:normal'><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>E=
xp</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>         </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D Term { <span class=3DSpellE>Binop</span> <=
span
class=3DSpellE>Exp</span> }<o:p></o:p></span></b></pre><pre><b style=3D'mso=
-bidi-font-weight:
normal'><span style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-fami=
ly:
Consolas'><span style=3D'mso-spacerun:yes'>              </span>| <span
class=3DGramE>if</span> <span class=3DSpellE>Exp</span> then <span class=3D=
SpellE>Exp</span> else <span
class=3DSpellE>Exp</span><o:p></o:p></span></b></pre><pre><b style=3D'mso-b=
idi-font-weight:
normal'><span style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-fami=
ly:
Consolas'><span style=3D'mso-spacerun:yes'>              </span>| let Def+ =
in <span
class=3DSpellE>Exp</span><o:p></o:p></span></b></pre><pre><b style=3D'mso-b=
idi-font-weight:
normal'><span style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-fami=
ly:
Consolas'><span style=3D'mso-spacerun:yes'>              </span>| map <span
class=3DSpellE>IdList</span> to <span class=3DSpellE>Exp</span><o:p></o:p><=
/span></b></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Term<span style=3D'mso-spac=
erun:yes'>        </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D <span class=3DSpellE>Unop</span> Term<o:p>=
</o:p></span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><span style=3D'mso-spacerun:yes'>             =
 </span>| Factor <span
class=3DGramE>{ (</span> <span class=3DSpellE>ExpList</span> ) }<o:p></o:p>=
</span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><span style=3D'mso-spacerun:yes'>             =
 </span>| Empty<o:p></o:p></span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><span style=3D'mso-spacerun:yes'>             =
 </span>| <span
class=3DSpellE>Int</span><o:p></o:p></span></b></pre><pre><b style=3D'mso-b=
idi-font-weight:
normal'><span style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-fami=
ly:
Consolas'><span style=3D'mso-spacerun:yes'>              </span>| Bool<o:p>=
</o:p></span></b></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Factor<span style=3D'mso-sp=
acerun:yes'>      </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D ( <span class=3DSpellE>Exp</span> ) | Prim=
 | Id<o:p></o:p></span></b></pre><pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>E=
xpList</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>     </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D { <span class=3DSpellE>PropExpList</span> =
}<o:p></o:p></span></b></pre><pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>P=
ropExpList</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'> :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D <span class=3DSpellE>Exp</span> { , <span
class=3DSpellE>Exp</span> }*<o:p></o:p></span></b></pre><pre><span class=3D=
SpellE><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>IdList</span></b></span></s=
pan><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>      </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D { <span class=3DSpellE>PropIdList</span> }=
<o:p></o:p></span></b></pre><pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>P=
ropIdList</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>  </span>:</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D Id { , Id}*<o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial",san=
s-serif'>Definitions</span></em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'><o:p></o:p></span></p>

<pre><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0=
pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><o:p>&nbsp;</o:p></span></b=
></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Def :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D Id :=3D <span class=3DSpellE>Exp</span> ;=
<o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial",san=
s-serif'>Primitive
Constants, Operators, and Operations</span></em><span style=3D'font-size:14=
.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> <o:p></o:p></span></p>

<pre><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0=
pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><o:p>&nbsp;</o:p></span></b=
></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Empty :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D empty<o:p></o:p></span></b></pre><pre><sp=
an
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Bool<span style=3D'mso-spac=
erun:yes'>  </span>:</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D true | false<o:p></o:p></span></b></pre><=
pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>U=
nop</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>  </span>:</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D Sign | ~<o:p></o:p></span></b></pre><pre>=
<span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Sign<span style=3D'mso-spac=
erun:yes'>  </span>:</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D<span style=3D'mso-spacerun:yes'>  </span>=
'+' | -<o:p></o:p></span></b></pre><pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>B=
inop</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'> :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D Sign | '*' | / | =3D | !=3D | &lt; | &gt;=
 | &lt;=3D | &gt;=3D | &amp; | '|'<o:p></o:p></span></b></pre><pre><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'>Prim<span style=3D'mso-spac=
erun:yes'>  </span>:</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D number? | function? | <span class=3DGramE=
>list</span>? | <span
class=3DGramE>empty</span>? | <span class=3DGramE>cons</span>? | <span clas=
s=3DGramE>cons</span> | first | rest | arity<o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial",san=
s-serif'>Identifiers</span></em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'><o:p></o:p></span></p>

<pre><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>I=
d :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D <span class=3DSpellE>AlphaOther</span> {<=
span
class=3DSpellE>AlphaOther</span> | Digit}*<o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>Please note that </span><tt><b style=3D'mso-bid=
i-font-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Id</=
span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> does <strong><span style=3D'mso-bidi-font-fami=
ly:
Arial'>not</span></strong> contain the anything that matches </span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>Prim</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> or the keywords </span><tt><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>if</span></b></tt>=
<span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>then</span></b></t=
t><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>else</span></b></t=
t><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>map</span></b></tt=
><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>to</span></b></tt>=
<span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>let</span></b></tt=
><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>in</span></b></tt>=
<span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>empty</span></b></=
tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, </span><tt><b style=3D'mso-bidi-font-weight:n=
ormal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>true</span></b></t=
t><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, and </span><tt><b style=3D'mso-bidi-font-weig=
ht:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>fals=
e</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>.<o:p></o:p></span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial",san=
s-serif'>Numbers</span></em><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'><o:p></o:p></span></p>

<pre><span class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-wei=
ght:normal'><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>I=
nt</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'> :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D Digit+<o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The preceding grammar requires one symbol <span
class=3DSpellE>lookahead</span> in a few situations. The Java <span class=
=3DSpellE>lexer</span>
in our support code includes a method </span><tt><b style=3D'mso-bidi-font-=
weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Toke=
n <span
class=3DGramE>peek(</span>)</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> that behaves exactly like the method </span><tt><b style=3D'mso-bid=
i-font-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Toke=
n <span
class=3DSpellE>readToken</span>()</span></b></tt><span style=3D'font-size:1=
4.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> except for the fact that it leaves the <span class=3DSpellE>the</sp=
an>
scanned token at the front of the input stream (in contrast </span><span
class=3DSpellE><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'=
mso-ansi-font-size:
12.0pt;font-family:Consolas'>readToken</span></b></tt></span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>()</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> removes the scanned token from the input stream).<o:p></o:p></span>=
</p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The Java file </span><tt><b style=3D'mso-bidi-f=
ont-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>lexe=
r.java</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> defines all of the abstract syntax classes
required to represent Jam programs using the composite design pattern. Ther=
e is
one constructor for each fundamentally different form of expression in the
definition of Jam syntax given above. Some primitive (non-recursive) abstra=
ct
syntax classes are the same the corresponding token classes. <o:p></o:p></s=
pan></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>For example, suppose the Jam program under
consideration is<o:p></o:p></span></p>

<pre><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>f=
(</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>x) + (x * 12))<o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The abstract syntax representation for this pro=
gram
phrase is:<o:p></o:p></span></p>

<pre><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>n=
ew</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'> <span class=3DSpellE>BinOpApp</span>(<o:p></o=
:p></span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><span style=3D'mso-spacerun:yes'>       </span=
><span
class=3DGramE>new</span> Op(&quot;+&quot;),<o:p></o:p></span></b></pre><pre=
><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><span style=3D'mso-spacerun:yes'>       </span=
><span
class=3DGramE>new</span> App(new Variable(&quot;f&quot;), new AST[] { new V=
ariable(&quot;x&quot;) }),<o:p></o:p></span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><span style=3D'mso-spacerun:yes'>       </span=
><span
class=3DGramE>new</span> <span class=3DSpellE>BinOpApp</span>(new Op(&quot;=
*&quot;), new Variable(&quot;x&quot;), new <span
class=3DSpellE>IntConstant</span>(12))<o:p></o:p></span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><span style=3D'mso-spacerun:yes'>     </span>)=
<o:p></o:p></span></b></pre>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>This construction does not tell the whole story.
The <span class=3DSpellE>lexer</span> is guaranteed to always return the <i=
>same</i>
object for a given operator. Similarly, there is only copy of each variable
encountered by the <span class=3DSpellE>lexer</span>. Hence, there is only =
one
copy of the </span><tt><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Operator</span></b=
></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> &quot;+&quot;, one copy of the </span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>Operator</span></b></tt><span style=3D'font-size:14.0=
pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> &quot;*&quot;, one copy of the </span><tt><b style=3D'mso-bidi-font=
-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Vari=
able</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> &quot;x&quot;, <i>etc</i>. As a result, the </=
span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>=3D=3D</span></b></tt><span style=3D'font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> operator in Java can be used to compare operators and variables. No=
te
that the </span><tt><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>Operator</span></b=
></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>s &quot;+&quot; and &quot;-&quot; can be used
either as unary or binary operators. <o:p></o:p></span></p>

<h3 style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6p=
t 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>=
<span
style=3D'mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Ari=
al'>Left-associative
Binary Operators<o:p></o:p></span></h3>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The preceding grammar for Jam has an annoying f=
law.
To make the language easy to parse using recursive descent (top-down) parsi=
ng,
we used right recursion in the definition of arithmetic expressions (</span=
><span
class=3DSpellE><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'=
mso-ansi-font-size:
12.0pt;font-family:Consolas'>Exp</span></b></tt></span><span style=3D'font-=
size:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;
mso-bidi-font-family:Arial'>). (Left recursion forces infinite looping in
top-down parsing.) But right recursion yields right-associative ASTs (where
computation must be performed right to left), while the usual mathematical
convention in arithmetic expressions is that binary operators are
left-associative (where computation must be performed left to right). There=
 is
a widely-used trick in writing grammars for top-down parsing using syntax
diagrams that avoids this problem. The trick is replace right recursion in a
simple production (only one alternative on the right hand side) by iteratio=
n:
an edge looping back to the input edge of the diagram. We used this trick in
generating the syntax diagrams for </span><span class=3DSpellE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>ExpList</span></b></tt></span><span style=3D'font-siz=
e:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;
mso-bidi-font-family:Arial'> and </span><span class=3DSpellE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>IdList</span></b></tt></span><span style=3D'font-size=
:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> for our original grammar. Given our original Jam grammar, we can
convert the production <o:p></o:p></span></p>

<pre><span class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-wei=
ght:normal'><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>E=
xp</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>         </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D Term { <span class=3DSpellE>Binop</span> <=
span
class=3DSpellE>Exp</span> } | ...<o:p></o:p></span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><o:p>&nbsp;</o:p></span></b></pre>

<p class=3DMsoNormal style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0=
pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt =
687.0pt 732.8pt'><span
class=3DGramE><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso=
-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Arial'>to</span></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family=
:"Times New Roman";
mso-bidi-font-family:Arial'> <o:p></o:p></span></p>

<pre><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0=
pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><o:p>&nbsp;</o:p></span></b=
></pre><pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>E=
xp</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>         </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D <span class=3DSpellE>BinaryExp</span> | ..=
.<o:p></o:p></span></b></pre><pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>B=
inaryExp</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><span style=3D'mso-spacerun=
:yes'>   </span>::</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>=3D Term { <span class=3DSpellE>Binop</span> <=
span
class=3DSpellE>BinaryExp</span> }<o:p></o:p></span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><o:p>&nbsp;</o:p></span></b></pre>

<p class=3DMsoNormal style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0=
pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt =
687.0pt 732.8pt'><span
class=3DGramE><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso=
-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Arial'>at</span></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family=
:"Times New Roman";
mso-bidi-font-family:Arial'> the cost of excluding chains of binary operati=
ons
terminating in an expression other than a term. Then this revised grammar c=
an
be represented using syntax diagrams that define </span><span class=3DSpell=
E><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>BinaryExp</span></b></tt></span><span style=3D'font-s=
ize:
14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Arial'> iteratively (just like </span><span class=3DSp=
ellE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>PropExpList</span></b></tt></span><span style=3D'font=
-size:
14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Arial'> in the original grammar). <o:p></o:p></span></=
p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The preceding definition of </span><span
class=3DSpellE><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'=
mso-ansi-font-size:
12.0pt;font-family:Consolas'>BinaryExp</span></b></tt></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> generates the same set of strings as the exten=
ded
rule: <o:p></o:p></span></p>

<pre><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0=
pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'><o:p>&nbsp;</o:p></span></b=
></pre><pre><span
class=3DSpellE><span class=3DGramE><b style=3D'mso-bidi-font-weight:normal'=
><span
style=3D'font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Consolas'>B=
inaryExp</span></b></span></span><span
class=3DGramE><b style=3D'mso-bidi-font-weight:normal'><span style=3D'font-=
size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Consolas'> :</span></b></span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'>:=3D Term { <span class=3DSpellE>BinOp</span> =
Term }*<o:p></o:p></span></b></pre><pre><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-size:12.0pt;mso-b=
idi-font-size:
10.0pt;font-family:Consolas'><o:p>&nbsp;</o:p></span></b></pre>

<p class=3DMsoNormal style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0=
pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt =
687.0pt 732.8pt'><span
class=3DGramE><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso=
-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Arial'>which</span></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family=
:"Times New Roman";
mso-bidi-font-family:Arial'> is ambiguous about left or right associativity.
When iteration is used to recognize a </span><span class=3DSpellE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>BinaryExp</span></b></tt></span><span style=3D'font-s=
ize:
14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Arial'>, the parsing process will construct a
left-associative tree since the tree is constructed left-to-right (each new=
 </span><span
class=3DSpellE><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'=
mso-ansi-font-size:
12.0pt;font-family:Consolas'>Binop</span></b></tt></span><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family=
:"Times New Roman";
mso-bidi-font-family:Arial'> adds a new root to the AST).<span
style=3D'mso-spacerun:yes'>  </span>This convention make the syntax diagram
formulation of our Jam grammar deterministic and unambiguous.<o:p></o:p></s=
pan></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The file <a
href=3D"file:///D:\cork\Documents\Comp%20411\2023\GitHub\Assignment-1-Maste=
r-2023\docs\docs\Assignments\1\GitHub\SyntaxDiagrams.pdf"><span
class=3DSpellE><span style=3D'mso-ascii-font-family:"Times New Roman";mso-h=
ansi-font-family:
"Times New Roman"'>SyntaxDiagrams</span></span></a> contains iterative synt=
ax
diagrams corresponding to the original left associative version of the Jam
language, which precisely describes the syntax of Jam and how we want the
parser to behave. Of course, this language eliminates a few quirky inputs f=
rom
the language based on our original <span class=3DSpellE>grammmar</span>. Yo=
ur
parser should treat these quirky inputs as erroneous. <o:p></o:p></span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>It is possible to write syntax diagrams that tr=
eat
binary expressions iteratively and still allow arbitrary expressions at the=
 end
of the binary expression. But the corresponding grammar and syntax diagrams=
 are
much more complex. So we have not followed this design choice in creating t=
he
revised syntax for Jam. In fact, we view our Jam grammar as a case study
showing that pure context-free grammars are not quite the right formalism f=
or
expressing easily parsed program syntax. Syntax diagrams where iteration is
always left-associative (equivalent to extended context-free-grammars where
iteration always expands into left-associative parse trees) are much better=
. I
am not aware of a rigorous exposition of such extended BNF grammars in the
literature; I suspect that most theoretical computer scientists would not f=
ind
such an exposition very interesting even though the standard notion of pars=
ing
language specified by a context-free grammar is an imperfect formalization =
of
practical parsing. <o:p></o:p></span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>Write your parser to produce left-associative A=
STs
for arithmetic expressions. If your parser implements either of the
&quot;revised&quot; syntax diagram definitions given above (which are
equivalent) using </span><tt><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>while</span></b></=
tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> loops for iteration and constructs the corresp=
onding
abstract syntax trees in a functional style (no mutation of trees in <span
class=3DSpellE>theconstruction</span> process), your parser will naturally =
build
syntax trees that are left-associative.<o:p></o:p></span></p>

<h2 style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6p=
t 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>=
<span
style=3D'mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Ari=
al'>Testing
and Submitting Your Program<o:p></o:p></span></h2>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The </span><span class=3DSpellE><span
style=3D'font-family:Consolas'>src</span></span><span style=3D'font-size:14=
.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'> folder in the provided code base includes some Junit4 test classes
which are not comprehensive.<span style=3D'mso-spacerun:yes'>  </span>You n=
eed to
add more test cases; you need to check every production in the grammar.<span
style=3D'mso-spacerun:yes'>  </span>If a production involves iteration or
recursion, you need to test the base cases as well as simple inductive
constructions.<o:p></o:p></span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>Edit the </span><tt><b style=3D'mso-bidi-font-w=
eight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>READ=
ME</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> file for your repository so that it<o:p></o:p>=
</span></p>

<ul type=3Ddisc>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l0 level1 lfo6;tab-stops:list .5in'><span style=3D'font-size:=
14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'>outlines the organization of your program,=
 <o:p></o:p></span></li>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l0 level1 lfo6;tab-stops:list .5in'><span style=3D'font-size:=
14.0pt;
     mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
     mso-bidi-font-family:Arial'>specifies any compatible additions that you
     made the provided API (not generally necessary), and<o:p></o:p></span>=
</li>
 <li class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-a=
lt:auto;
     mso-list:l0 level1 lfo6;tab-stops:list .5in'><span class=3DSpellE><span
     class=3DGramE><span style=3D'font-size:14.0pt;mso-bidi-font-size:12.0p=
t;
     mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Arial'>=
specifes</span></span></span><span
     style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-f=
amily:
     "Times New Roman";mso-bidi-font-family:Arial'> what testing process you
     used to confirm the correctness of your program.<o:p></o:p></span></li>
</ul>

<p class=3DMsoNormal style=3D'mso-margin-top-alt:auto;mso-margin-bottom-alt=
:auto;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412=
.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family=
:"Times New Roman";
mso-bidi-font-family:Arial'>Note that the README file is a GitHub <span
class=3DSpellE>MarkDown</span> file, text augmented by a few simple format=
ting
annotations.<span style=3D'mso-spacerun:yes'>  </span><span class=3DSpellE>=
MarkDown</span>
(MD) is much less powerful than HTML but much easier to use.<span
style=3D'mso-spacerun:yes'>  </span>The webpage <b style=3D'mso-bidi-font-w=
eight:
normal'><a
href=3D"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"><=
span
style=3D'mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Tim=
es New Roman"'>markdown-cheat-sheet</span></a></b>
is a good summary for learning <span class=3DSpellE>MarkDown</span> and a u=
seful
reference.<o:p></o:p></span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>We do not recommend using separate test data fi=
les because
it creates more opportunities for incidental errors when testing your
solution.<span style=3D'mso-spacerun:yes'>  </span>Unless you are testing h=
ow
well your program scales to large inputs, they are generally unnecessary.<s=
pan
style=3D'mso-spacerun:yes'>  </span>All JUnit test classes submitted for gr=
ading
should be compatible with a generic solution that conforms to the public
interface provided by the stub files in the provided support code. In other
words, we should be able to compile and run your unit tests against a refer=
ence
solution used for grading, which has the same public interface as the suppo=
rt
code. Your test classes should be defined in files matching the pattern </s=
pan><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>&quot;*Assign#Test.java&quot;</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, where </span><tt><b style=3D'mso-bidi-font-we=
ight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>&quo=
t;#&quot;</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> is the current assignment number. For example,=
 </span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>&quot;MyAssign2Test.java&quot;</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> would be a valid name for Assignment 2 unit te=
sts.
If you want to include other tests that you do not want graded (e.g., to te=
st
your private interfaces), then simply use a different suffix than
&quot;Test&quot; for the test class names (e.g., </span><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>&quot;Assign1Test#.java&quot;</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>). If you have additional utility classes that =
are
required dependences of your unit test classes, please name those classes u=
sing
the pattern </span><tt><b style=3D'mso-bidi-font-weight:normal'><span
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>&quot;*Assign#Test=
Support.java&quot;</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, which signals that the class is required to
support your unit tests, but is not a unit test class that should be
independently launched. You may also include test support files with names
matching the pattern </span><tt><b style=3D'mso-bidi-font-weight:normal'><s=
pan
style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>&quot;*AssignAllTe=
stSupport.java&quot;</span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>, which can contain common test support code th=
at
can be reused across multiple assignment submissions without needing to ren=
ame
the file.<span style=3D'mso-spacerun:yes'>  </span>Note that our class solu=
tions
to the assignments do not rely on such utility classes.<o:p></o:p></span></=
p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>Each method in your program should include a sh=
ort
comment stating precisely what it does. For routines that parse a particular
form of program phrase, the comment should provide the grammar rules descri=
bing
that form.<o:p></o:p></span></p>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>You obviously do not need to submit your prog=
ram,
since you are creating it inside a repository on the ownership of the course
staff.<span style=3D'mso-spacerun:yes'>  </span>We can easily access all st=
udent
repositories.<o:p></o:p></span></p>

<!-- ONLY WORKS IN BASH
  <p>Note if <tt>turnin411</tt> is not on your path, you will need to add <=
tt>~comp411/bin</tt> to your path:</p>
  <pre>export PATH=3D$PATH:~comp411/bin</pre>
  -->

<h2 style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6p=
t 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>=
<span
style=3D'mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Ari=
al'>Implementation
Hints<o:p></o:p></span></h2>

<p style=3D'tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt=
 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><=
span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>The </span><span class=3DSpellE><span class=3DG=
ramE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>toString</span></b></tt></span></span><span class=3DG=
ramE><tt><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-ansi-font-size:12.=
0pt;
font-family:Consolas'>(</span></b></tt></span><tt><b style=3D'mso-bidi-font=
-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>)</s=
pan></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> methods for each </span><tt><b style=3D'mso-bi=
di-font-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>AST<=
/span></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'> class effectively provide an <span class=3DSpe=
llE>unparser</span>
for </span><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'mso-=
ansi-font-size:
12.0pt;font-family:Consolas'>AST</span></b></tt><span style=3D'font-size:14=
.0pt;
mso-bidi-font-size:12.0pt;font-family:"Times New Roman",serif;mso-bidi-font=
-family:
Arial'>s. You can directly compare test input strings with output </span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-family:Consolas'>=
AST</span></b><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>s by <span class=3DSpellE>unparsing</span> the =
</span><b
style=3D'mso-bidi-font-weight:normal'><span style=3D'font-family:Consolas'>=
AST</span></b><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>s (using </span><span class=3DSpellE><span
class=3DGramE><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'm=
so-ansi-font-size:
12.0pt;font-family:Consolas'>toString</span></b></tt></span></span><span
class=3DGramE><tt><b style=3D'mso-bidi-font-weight:normal'><span style=3D'm=
so-ansi-font-size:
12.0pt;font-family:Consolas'>(</span></b></tt></span><tt><b style=3D'mso-bi=
di-font-weight:
normal'><span style=3D'mso-ansi-font-size:12.0pt;font-family:Consolas'>)</s=
pan></b></tt><span
style=3D'font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New =
Roman",serif;
mso-bidi-font-family:Arial'>). The two strings should match up to differenc=
es
in whitespace, new lines, and parentheses using for grouping which may force
you to slightly reformat your input strings.<o:p></o:p></span></p>

</div>

</body>

</html>

------=_NextPart_01D9272D.D52FEE00
Content-Location: file:///C:/20C89D18/new-index_files/themedata.thmx
Content-Transfer-Encoding: base64
Content-Type: application/vnd.ms-officetheme

UEsDBBQABgAIAAAAIQDp3g+//wAAABwCAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbKyRy07DMBBF
90j8g+UtSpyyQAgl6YLHjseifMDImSQWydiyp1X790zSVEKoIBZsLNkz954743K9Hwe1w5icp0qv
8kIrJOsbR12l3zdP2a1WiYEaGDxhpQ+Y9Lq+vCg3h4BJiZpSpXvmcGdMsj2OkHIfkKTS+jgCyzV2
JoD9gA7NdVHcGOuJkTjjyUPX5QO2sB1YPe7l+Zgk4pC0uj82TqxKQwiDs8CS1Oyo+UbJFkIuyrkn
9S6kK4mhzVnCVPkZsOheZTXRNajeIPILjBLDsAyJX89nIBkt5r87nons29ZZbLzdjrKOfDZezE7B
/xRg9T/oE9PMf1t/AgAA//8DAFBLAwQUAAYACAAAACEApdan58AAAAA2AQAACwAAAF9yZWxzLy5y
ZWxzhI/PasMwDIfvhb2D0X1R0sMYJXYvpZBDL6N9AOEof2giG9sb69tPxwYKuwiEpO/3qT3+rov5
4ZTnIBaaqgbD4kM/y2jhdj2/f4LJhaSnJQhbeHCGo3vbtV+8UNGjPM0xG6VItjCVEg+I2U+8Uq5C
ZNHJENJKRds0YiR/p5FxX9cfmJ4Z4DZM0/UWUtc3YK6PqMn/s8MwzJ5PwX+vLOVFBG43lExp5GKh
qC/jU72QqGWq1B7Qtbj51v0BAAD//wMAUEsDBBQABgAIAAAAIQBreZYWgwAAAIoAAAAcAAAAdGhl
bWUvdGhlbWUvdGhlbWVNYW5hZ2VyLnhtbAzMTQrDIBBA4X2hd5DZN2O7KEVissuuu/YAQ5waQceg
0p/b1+XjgzfO3xTVm0sNWSycBw2KZc0uiLfwfCynG6jaSBzFLGzhxxXm6XgYybSNE99JyHNRfSPV
kIWttd0g1rUr1SHvLN1euSRqPYtHV+jT9yniResrJgoCOP0BAAD//wMAUEsDBBQABgAIAAAAIQCq
UiXfxgYAAIsaAAAWAAAAdGhlbWUvdGhlbWUvdGhlbWUxLnhtbOxZXYvbRhR9L/Q/CL07/pL8scQb
bNnOttlNQuyk5HFsj63JjjRGM96NCYGSPBYKpWnpQwN960NpG0igL+mv2TalTSF/oXdGtjxjj7ub
JYWlZA2LNDr3zpl7r84dSZev3I+oc4QTTljccIuXCq6D4yEbkXjScG/3u7ma63CB4hGiLMYNd465
e2X3ww8uox0R4gg7YB/zHdRwQyGmO/k8H8Iw4pfYFMdwbcySCAk4TSb5UYKOwW9E86VCoZKPEIld
J0YRuL0xHpMhdvrSpbu7dN6hcBoLLgeGNOlJ19iwUNjRYVEi+JwHNHGOEG24MM+IHffxfeE6FHEB
FxpuQf25+d3LebSzMKJii61m11V/C7uFweiwpOZMJoNsUs/zvUoz868AVGziOtVOpVPJ/CkAGg5h
pSkX3affqrfa/gKrgdJDi+92tV0uGnjNf3mDc9OXPwOvQKl/bwPf7QYQRQOvQCne38B7XrUUeAZe
gVJ8ZQNfLTTbXtXAK1BISXy4gS74lXKwXG0GGTO6Z4XXfa9bLS2cr1BQDVl1ySnGLBbbai1C91jS
BYAEUiRI7Ij5FI/REKo4QJQMEuLsk0kIhTdFMeMwXCgVuoUy/Jc/Tx2piKAdjDRryQuY8I0hycfh
w4RMRcP9GLy6GuTNyx/fvHzunDx6cfLol5PHj08e/Zw6Mqz2UDzRrV5//8XfTz91/nr+3esnX9nx
XMf//tNnv/36pR0IK12F4NXXz/548ezVN5//+cMTC7yZoIEO75MIc+c6PnZusQgWpkJgMseD5O0s
+iEiukUznnAUIzmLxX9HhAb6+hxRZMG1sBnBOwlIjA14dXbPINwLk5kgFo/XwsgAHjBGWyyxRuGa
nEsLc38WT+yTJzMddwuhI9vcAYqN/HZmU9BWYnMZhNigeZOiWKAJjrFw5DV2iLFldXcJMeJ6QIYJ
42wsnLvEaSFiDUmfDIxqWhntkQjyMrcRhHwbsTm447QYta26jY9MJNwViFrI9zE1wngVzQSKbC77
KKJ6wPeRCG0ke/NkqOM6XECmJ5gypzPCnNtsbiSwXi3p10Be7Gk/oPPIRCaCHNp87iPGdGSbHQYh
iqY2bI/EoY79iB9CiSLnJhM2+AEz7xB5DnlA8dZ03yHYSPfpanAblFWntCoQeWWWWHJ5FTOjfntz
OkZYSQ0Iv6HnEYlPFfc1Wff/W1kHIX317VPLqi6qoDcTYr2j9tZkfBtuXbwDlozIxdfuNprFNzHc
LpsN7L10v5du938v3dvu53cv2CuNBvmWW8V0q6427tHWffuYUNoTc4r3udq6c+hMoy4MSjv1zIqz
57hpCIfyToYJDNwkQcrGSZj4hIiwF6Ip7O+LrnQy4QvXE+5MGYdtvxq2+pZ4OosO2Ch9XC0W5aNp
Kh4cidV4wc/G4VFDpOhKdfUIlrlXbCfqUXlJQNq+DQltMpNE2UKiuhyUQVIP5hA0Cwm1snfCom5h
UZPul6naYAHUsqzA1smBDVfD9T0wASN4okIUj2Se0lQvs6uS+S4zvS2YRgXAPmJZAatM1yXXrcuT
q0tL7QyZNkho5WaSUJFRPYyHaIQX1SlHz0LjbXNdX6XUoCdDoeaD0lrRqNb+jcV5cw1269pAY10p
aOwcN9xK2YeSGaJpwx3DYz8cRlOoHS63vIhO4N3ZUCTpDX8eZZkmXLQRD9OAK9FJ1SAiAicOJVHD
lcvP0kBjpSGKW7EEgnBhydVBVi4aOUi6mWQ8HuOh0NOujchIp6eg8KlWWK8q8/ODpSWbQbp74ejY
GdBZcgtBifnVogzgiHB4+1NMozki8DozE7JV/a01poXs6u8TVQ2l44hOQ7ToKLqYp3Al5RkddZbF
QDtbrBkCqoVk0QgHE9lg9aAa3TTrGimHrV33dCMZOU00Vz3TUBXZNe0qZsywbANrsTxfk9dYLUMM
mqZ3+FS61yW3vtS6tX1C1iUg4Fn8LF33DA1Bo7aazKAmGW/KsNTsxajZO5YLPIXaWZqEpvqVpdu1
uGU9wjodDJ6r84PdetXC0Hi5r1SRVt899E8TbHAPxKMNL4FnVHCVSvjwkCDYEPXUniSVDbhF7ovF
rQFHziwhDfdBwW96QckPcoWa38l5Za+Qq/nNcq7p++Vixy8W2q3SQ2gsIoyKfvrNpQuvouh88eVF
jW98fYmWb9suDVmUZ+rrSl4RV19fiqXtX18cAqLzoFLq1sv1ViVXLze7Oa/dquXqQaWVa1eCarvb
DvxavfvQdY4U2GuWA6/SqeUqxSDIeZWCpF+r56peqdT0qs1ax2s+XGxjYOWpfCxiAeFVvHb/AQAA
//8DAFBLAwQUAAYACAAAACEADdGQn7YAAAAbAQAAJwAAAHRoZW1lL3RoZW1lL19yZWxzL3RoZW1l
TWFuYWdlci54bWwucmVsc4SPTQrCMBSE94J3CG9v07oQkSbdiNCt1AOE5DUNNj8kUeztDa4sCC6H
Yb6ZabuXnckTYzLeMWiqGgg66ZVxmsFtuOyOQFIWTonZO2SwYIKObzftFWeRSyhNJiRSKC4xmHIO
J0qTnNCKVPmArjijj1bkIqOmQci70Ej3dX2g8ZsBfMUkvWIQe9UAGZZQmv+z/TgaiWcvHxZd/lFB
c9mFBSiixszgI5uqTATKW7q6xN8AAAD//wMAUEsBAi0AFAAGAAgAAAAhAOneD7//AAAAHAIAABMA
AAAAAAAAAAAAAAAAAAAAAFtDb250ZW50X1R5cGVzXS54bWxQSwECLQAUAAYACAAAACEApdan58AA
AAA2AQAACwAAAAAAAAAAAAAAAAAwAQAAX3JlbHMvLnJlbHNQSwECLQAUAAYACAAAACEAa3mWFoMA
AACKAAAAHAAAAAAAAAAAAAAAAAAZAgAAdGhlbWUvdGhlbWUvdGhlbWVNYW5hZ2VyLnhtbFBLAQIt
ABQABgAIAAAAIQCqUiXfxgYAAIsaAAAWAAAAAAAAAAAAAAAAANYCAAB0aGVtZS90aGVtZS90aGVt
ZTEueG1sUEsBAi0AFAAGAAgAAAAhAA3RkJ+2AAAAGwEAACcAAAAAAAAAAAAAAAAA0AkAAHRoZW1l
L3RoZW1lL19yZWxzL3RoZW1lTWFuYWdlci54bWwucmVsc1BLBQYAAAAABQAFAF0BAADLCgAAAAA=

------=_NextPart_01D9272D.D52FEE00
Content-Location: file:///C:/20C89D18/new-index_files/colorschememapping.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml

<?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"yes"?>
<a:clrMap xmlns:a=3D"http://schemas.openxmlformats.org/drawingml/2006/main"=
 bg1=3D"lt1" tx1=3D"dk1" bg2=3D"lt2" tx2=3D"dk2" accent1=3D"accent1" accent=
2=3D"accent2" accent3=3D"accent3" accent4=3D"accent4" accent5=3D"accent5" a=
ccent6=3D"accent6" hlink=3D"hlink" folHlink=3D"folHlink"/>
------=_NextPart_01D9272D.D52FEE00
Content-Location: file:///C:/20C89D18/new-index_files/filelist.xml
Content-Transfer-Encoding: quoted-printable
Content-Type: text/xml; charset="utf-8"

<xml xmlns:o=3D"urn:schemas-microsoft-com:office:office">
 <o:MainFile HRef=3D"../new-index.htm"/>
 <o:File HRef=3D"themedata.thmx"/>
 <o:File HRef=3D"colorschememapping.xml"/>
 <o:File HRef=3D"filelist.xml"/>
</xml>
------=_NextPart_01D9272D.D52FEE00--
